[
  {
    "objectID": "ioc_scrnaseq.html",
    "href": "ioc_scrnaseq.html",
    "title": "IOC on Single-cell RNAseq Analysis",
    "section": "",
    "text": "Training on single-cell RNAseq analysis is upcoming!"
  },
  {
    "objectID": "index.html#what-is-ioc",
    "href": "index.html#what-is-ioc",
    "title": "Welcome To the IOC Training!",
    "section": "What is IOC?",
    "text": "What is IOC?\nThe InforBio platform has developed an “Interactive Online Companionship” (IOC) specifically tailored to initiate researchers into bioinformatics. The IOC involved one-to-many virtual work sessions where companions are trained to analyze their own data.\nAll IOC programs are structured into a series of modules, with each module building upon the knowledge and skills acquired in the previous one. One module lasts one week, during which companions dive into online materials to ensure they understand and internalize the content. Companions then complete quizzes and exercises using both public and their own data to gauge their understanding, receiving personalized feedback on their work. To facilitate their learning, we provide access to computational resources such as Rstudio and Galaxy servers. The module wraps up with a 2.5 hours’ videoconference to recap the week’s material and address any questions. These videoconferences are recorded and made available for later viewing, ensuring continuous access to the learning resources.\nBy the end of an IOC, companions will be equipped with expertise and confidence to run their own analyses independently."
  },
  {
    "objectID": "index.html#ioc-tools",
    "href": "index.html#ioc-tools",
    "title": "Welcome To the IOC Training!",
    "section": "IOC tools",
    "text": "IOC tools\n\nZoom\nWe will use Zoom for videoconferencing.\nPlease follow the rules for usage:\n\nPlease be on time.\nTechnical setup:\n\nEnsure your internet connection is stable.\nTest your camera and microphone before the session.\n\nDuring the session:\n\nKeep your microphone muted unless you’re speaking to avoid background noise.\nUse the “Raise Hand” feature if you want to ask a question during the lecture.\nKeep your camera on if possible to create a more interactive environment.\n\nRecorded sessions are for personal review only. Do not distribute them without permission.\n\n\n\nSlack\nSlack is a dedicated workspace for communication and staying connected between sessions.\nIf you haven’t already use it, you need to create a Slack account.\nIf you have a Slack account, you can either connect to the account using this webpage, or use a desktop version on your computer. (Slack Windows desktop, Slack Mac desktop)\nAnd you will receive an invitation link to join the IOC Slack of your group.\n\nPost messages in the correct channel, e.g., “questions” for asking about course content.\nWhen asking questions, please be specific and clear with a minimal context, include screenshots or error message to help others understand the issue.\nWhen discussing a question, please reply in the thread to avoid flooding the channel.\n\n\n\nTrello\nTrello is a tool to help you stay organized and track your learning progress.\nYou will be invited to join a Trello board for this IOC. We will create one list per student, please add one card for each session to add your notes, summary, etc."
  },
  {
    "objectID": "ioc_bulk_rnaseq.html",
    "href": "ioc_bulk_rnaseq.html",
    "title": "IOC on Bulk RNAseq Analysis",
    "section": "",
    "text": "Training on bulk RNAseq analysis with Galaxy is upcoming!"
  },
  {
    "objectID": "ioc_r/week01/r_w01_work.html",
    "href": "ioc_r/week01/r_w01_work.html",
    "title": "Week 1 - Homework",
    "section": "",
    "text": "Write your code directly in a Quarto document.\nTo create a Quarto document: go to File -&gt; New File -&gt; Quarto Document, then click Create.\n\nImport the data file “visceral_fat.csv”.\n\n\nFirst, upload the file to a folder of your choice within your RStudio project\nNext, import the data into R and name the data frame visceral_fat.\n\nTip:\nUse the click-button method in RStudio to upload and import the file. Then, copy and paste the R commands generated into a code chunk in your Quarto report.\nOnce imported, you can use the visceral_fat dataset for further analysis in your report.\n\nSummarize the dataset.\n\nRun the function summary(visceral_fat) to generate a summary of the dataset. Describe what information you obtained.\n\nDraw a histogram.\n\nCreate a histogram for the diastolic blood pressure using the column visceral_fat[[\"diastolic_bp__mmhg\"]]. Describe what you observe from the plot.\n\nHandle an outlier.\n\nAfter consulting with a clinician, you discover that the 27th value of the diastolic blood pressure was incorrectly recorded.\n\nIgnore this value using visceral_fat[[\"diastolic_bp__mmhg\"]][-27]\nRedraw the histogram after excluding the outlier and describe any changes you observe.\n\n\nCompare mean and median.\n\nCalculate the mean (mean()) and the median (median()) for the diastolic blood pressure\n\nbefore ignoring the 27th value: visceral_fat[[\"diastolic_bp__mmhg\"]]\nafter ignoring the 27th value: visceral_fat[[\"diastolic_bp__mmhg\"]][-27]\n\nDescribe how the outlier affects the mean and median.\n\nClick “Render” to generate your Quarto report."
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#welcome-to-r",
    "href": "ioc_r/week01/r_w01_slides.html#welcome-to-r",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Welcome to R!",
    "text": "Welcome to R!\n\n\nWhy R?\n\nBiologist friendly!\nFree and open-source\nSupported by a huge community\n\n\nWhat you can do with R?\n\nAnalyze your data\nVisualize your findings\nAutomate your workflow\nShare reproducible research"
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#the-r-console",
    "href": "ioc_r/week01/r_w01_slides.html#the-r-console",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "The R Console",
    "text": "The R Console\n\nType a command after the prompt “&gt;” and type “Enter” to execute it."
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#rstudio-login",
    "href": "ioc_r/week01/r_w01_slides.html#rstudio-login",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Rstudio Login",
    "text": "Rstudio Login\nConnect to your RStudio server account."
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#rstudio-ide",
    "href": "ioc_r/week01/r_w01_slides.html#rstudio-ide",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Rstudio IDE",
    "text": "Rstudio IDE\nIntegrated Development Environment (IDE)\n\n\n\n\n\nConsole: where R “talks back” to you.\nEnvironment/History: tracks your variables and past commands.\nFiles/Plots/Packages: managing your files, viewing graphs, or installing tools.\n\nRstudio cheat sheet (and French version)\n\n\nEverything you need in one organized window. Save your work as a script, RStudio includes many useful features which let us code easily. notebook, show results"
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#getting-started-in-r",
    "href": "ioc_r/week01/r_w01_slides.html#getting-started-in-r",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Getting Started in R",
    "text": "Getting Started in R\n\n\n\nCreate a new file: Click File -&gt; New File -&gt; R Script or \nSave script: Cmd + S or Ctrl + S\n\n\n\nBasic commands1:\n\n# Use `#` to write a comment (line) in your script\n# Math with R:\n2 + 2    # Yes, R can do math!\nsqrt(16) # Square root.\n\n# Create a variable:\nx &lt;- 5 # Now x is 5. You can reuse it!\n\n# Inspect your environment:\n## Look at the \"Environment\" pane, do you see your x?\nls()\n\n# Load a package:\nlibrary(stats)\n\n# Get help of a function (documentation):\n?mean\n\n# Quit RStudio properly\nq()\n\nShortcut to run code: highlight it and press Ctrl + Enter (Windows) or Cmd + Enter (Mac)"
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#some-configuration",
    "href": "ioc_r/week01/r_w01_slides.html#some-configuration",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Some Configuration",
    "text": "Some Configuration\nGo to Tools -&gt; Global Options…\n\n\nUnder the General tab:\n\nUncheck the box “Restore .RData…”\nSet “Save workspace to .RData on exit” to Never."
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#some-configuration-1",
    "href": "ioc_r/week01/r_w01_slides.html#some-configuration-1",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Some Configuration",
    "text": "Some Configuration\nGo to Tools -&gt; Global Options…\n\n\nUnder the Code tab:\nIn the Display panel, check the box “Use rainbow parentheses”"
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#some-configuration-2",
    "href": "ioc_r/week01/r_w01_slides.html#some-configuration-2",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Some Configuration",
    "text": "Some Configuration\nGo to Tools -&gt; Global Options…\n\n\n\nUnder the Appearance tab:\n\nYou can select a theme for you RStudio, e.g., the “Cobalt” for a dark theme.\n\nUnder the Pane Layout tab:\n\nYou can arrange the four panels as you prefer.\nIn addition, click “Add Column” lets you open an extra “Source” code column, allowing you to view your scripts side by side!"
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#create-an-r-project",
    "href": "ioc_r/week01/r_w01_slides.html#create-an-r-project",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Create an R Project",
    "text": "Create an R Project\nAn R project keeps everything for your project in one working directory and helps R to know where to look for your files.\n\n\nIn RStudio, go to File -&gt; New Project\nChoose New Directory and click New Project\nSet a folder name (e.g., my_project) and select where to save it.\nClick Create Project\n\n\n\nYou’ll notice RStudio restarts, and now your project is set up!\n\n\nAn R Project is a way to keep everything for your work (scripts, data, outputs) in one place. Think of it like a special folder where RStudio automatically knows where to look for your files. It helps avoid problems with messy file paths."
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#understanding-file-paths",
    "href": "ioc_r/week01/r_w01_slides.html#understanding-file-paths",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Understanding File Paths",
    "text": "Understanding File Paths\nA path tells your computer where to find files.\n\n\nAbsolute path, starts from the very top of your computer’s folder\n\nE.g.:\n\nIn real-life: France, Paris, 9 Quai St Bernard, Building B, office 725\nOn Linux/Mac: /home/test_user/my_project/data/myfile.csv\nOn Windows: C:\\Users\\test_user\\my_project\\data\\myfile.csv\n\n\n\n\n\n\nRelative path, starts from your working directory (folder)\n\nE.g.:\n\nBuilding B, office 725\ndata/myfile.csv or data\\myfile.csv (Windows)\n\n\n\n\ncomputer’s file system -&gt; a country files -&gt; offices in a building"
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#a-well-organized-folder",
    "href": "ioc_r/week01/r_w01_slides.html#a-well-organized-folder",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "A Well Organized Folder",
    "text": "A Well Organized Folder\nTree structure:\nmy_project              # Your working directory    \n├── my_project.Rproj    # The R project configuration file\n├── README.md           # A short introduction of the project\n├── data                # Raw data files\n│   └── raw_count.tsv\n├── scripts             # Your R code files\n│   └── 01-analysis.R\n│   └── 02-figures.R\n└── outputs             # Results, e.g., graphs, reports\n\nexample of bad home organisation: pillow in kitchen and microoven in the bathroom The trunk is the main folder (your R Project). Branches are subfolders for scripts, data, and output, ect. By building a clear structure, you’ll: Always know where to find things. Save time when coding in R or sharing your project with others. Avoid messy files scattered everywhere."
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#where-are-you",
    "href": "ioc_r/week01/r_w01_slides.html#where-are-you",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Where Are You?",
    "text": "Where Are You?\nmy_project              # Your working directory\n├── my_project.Rproj    # The R project configuration file\n├── README.md           # A short introduction of the project\n├── data                # Raw data files\n│   └── raw_count.tsv\n├── scripts             # Your R code files\n│   └── 01-analysis.R\n│   └── 02-figures.R\n└── outputs            # Results, e.g., graphs, reports\n\ngetwd() # Get working directory\n[1] \"/home/test_user/my_project\"\n\nWhat are the absolute and relative paths of the script “02-figures.R”?\n\n\n\nabsolute path: /home/test_user/my_project/scripts/02-figures.R\nrelative path: scripts/02-figures.R\n\n\n\nfile.exists(\"/home/test_user/my_project/scripts/02-figures.R\")\n[1] TRUE\nfile.exists(\"scripts/02-figures.R\")\n[1] TRUE"
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#import-dataset",
    "href": "ioc_r/week01/r_w01_slides.html#import-dataset",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Import Dataset",
    "text": "Import Dataset\n\n\n\nSupported formats:\n\ntext files (.txt, .csv, etc.)\nExcel files\ndata from other software (e.g., SAS)\n\nClick-button methods:\n\nFrom menu bar: File -&gt; Import Dataset -&gt; Select the format -&gt; Choose your file\nFrom the “Environment” pane: click “Import Dataset” -&gt; Select the format -&gt; Choose your file\nFrom the “Files” pane: Navigate to your file location -&gt; Click the file and select “Import Dataset”"
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#quarto",
    "href": "ioc_r/week01/r_w01_slides.html#quarto",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Quarto",
    "text": "Quarto\n\nOpen-source tools for creating dynamic and shareable document.\nCombines narrative text and code (multi-language) in one script (.qmd).\nSupports multiple output formats: .html, .docx, .pptx, .pdf, etc."
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#an-example",
    "href": "ioc_r/week01/r_w01_slides.html#an-example",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "An Example",
    "text": "An Example\n\n\n\n\n\n\nMarkdown syntax cheat sheet"
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#need-some-help",
    "href": "ioc_r/week01/r_w01_slides.html#need-some-help",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Need Some Help?",
    "text": "Need Some Help?\n\nGoogle it!\nAsk/discuss your question via Slack.\nAI (like ChatGPT) is your friend 😉, but be careful of false answers! (More details in session 6)\n\nKey points:\n\nExplain your question step-by-step.\nShare the context.\nUse keywords.\nTry to rephrase the question.\n\n\ngoogle/forum stack overFlow - what are you trying to do / what did you try? - the warning or error message / your code / your data structure - language name / function or package name / a specific problem - try and iterate"
  },
  {
    "objectID": "ioc_r/week01/r_w01_slides.html#todays-goals",
    "href": "ioc_r/week01/r_w01_slides.html#todays-goals",
    "title": "Kickstart with R:Your Gateway to Data Science",
    "section": "Today’s Goals",
    "text": "Today’s Goals\n\nGet familiar with the RStudio\nCreate an R project in RStudio\nUpload and import data file into RStudio\nGenerate your first Quarto report"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#data-types",
    "href": "ioc_r/week02/r_w02_slides.html#data-types",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Data Types",
    "text": "Data Types\n\ngetwd()\n\n[1] \"/home/runner/work/IOC/IOC/ioc_r/week02\"\n\nfile.exists(\"../custom.css\")\n\n[1] TRUE\n\nfile.exists(\"../../images/logoInforBio_fond_blanc_small.png\")\n\n[1] TRUE"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#data-types-1",
    "href": "ioc_r/week02/r_w02_slides.html#data-types-1",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Data Types",
    "text": "Data Types\nExamples: 1, 2.5, A, InforBio, I love R, TRUE, FALSE\nWhat are their data type in the daily life?\n\nAnd in R?\n\nNumeric: 1, 2.5\nInteger: 1\nCharacter: \"A\", \"InforBio\", \"I love R\"\nLogical: TRUE, FALSE\nFactor: for categorical data"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#where-do-we-store-data",
    "href": "ioc_r/week02/r_w02_slides.html#where-do-we-store-data",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Where Do We Store Data?",
    "text": "Where Do We Store Data?\n\nA variable is like a box where you store data.\nEach variable has a name and content (one or multiple values).\nA variable is created at the moment you assign a value to it. Use &lt;- for assignment.\n\n\nx &lt;- 1 # put a space on each side of the assignment sign\nx # type variable name to print its value(s)\n\n[1] 1\n\nchar_name &lt;- \"InforBio\"\nchar_name\n\n[1] \"InforBio\"\n\npassed &lt;- TRUE\npassed\n\n[1] TRUE\n\n\nCheck the “Environment” pane or type ls() in the console, are variables you just created there?\n\nVariables are containers for data. A box labeled “x” containing the number 1. A box labeled “char_name” containing the platform name “InforBio”."
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#variable-naming-convention",
    "href": "ioc_r/week02/r_w02_slides.html#variable-naming-convention",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Variable Naming Convention",
    "text": "Variable Naming Convention\n\n\n\nBe descriptive and keep it short\nUse snake case (only [a-z] and _)\nAvoid special characters (such as !, #, ) and spaces\nDo not start a name with numbers\nAvoid reserved keywords in R (e.g., function, if, TRUE)\nDo not overwrite built-in functions (e.g., mean, sd)\n\n\nWhich are validated names?\nfoo\ntest\nvar\nvar2\nexam_results\na_variable_with_a_name_super_long\ncount.matrix \n\nday_1\nday_one\nday1\nfirst_day_of_the_month\nDayOne\ndayOne\nDAYONE\nDAYone\n\n\nHow to know if a variable name was already used?\n\nType help(reserved) to check reserved words in R.\nCheck in “Environment” pane.\nType the first letter of a name and press the Tab key to trigger autocompletion\n\n\n\nFollow the same rules when you naming your R project folder. If really needs a long name, use abbreviation of it with a comment line at the begin to explain what it stands for."
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#numeric-integer-double",
    "href": "ioc_r/week02/r_w02_slides.html#numeric-integer-double",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Numeric, Integer, Double",
    "text": "Numeric, Integer, Double\n\nmy_var &lt;- 10\nmy_var\n\n[1] 10\n\nclass(my_var)\n\n[1] \"numeric\"\n\nis.numeric(my_var)\n\n[1] TRUE\n\n\n\n\nclass(10L) # \"L\" declares it's an integer\n\n[1] \"integer\"\n\ntypeof(10L)\n\n[1] \"integer\"\n\n\n\n\n\nclass(1.5)\n\n[1] \"numeric\"\n\ntypeof(1.5)\n\n[1] \"double\""
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#character",
    "href": "ioc_r/week02/r_w02_slides.html#character",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Character",
    "text": "Character\nR stores text (strings) as character. Use quotation marks to indicate a value is character.\n\n# create a vector of characters\nx &lt;- c(\"I\", \"love\", \"R\")\nx\n\n[1] \"I\"    \"love\" \"R\"   \n\nclass(x)\n\n[1] \"character\"\n\nis.character(x)\n\n[1] TRUE\n\n\n\n\nx &lt;- \"1\"\ny &lt;- \"2\"\nx + y\n\nError in x + y: non-numeric argument to binary operator\n\n\n\n\n\nas.numeric(x) + as.numeric(y)  # convert to numeric\n\n[1] 3\n\n\n\n\n\nas.character(1) # convert back to character\n\n[1] \"1\""
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#logical-1",
    "href": "ioc_r/week02/r_w02_slides.html#logical-1",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Logical (1)",
    "text": "Logical (1)\n\nOnly two possible values for logical data: TRUE or FALSE.\nCan be written as T or F, but never in other formats (e.g.: True, true, etc.)\n\n\nis.logical(TRUE)\n\n[1] TRUE\n\nis.logical(T)\n\n[1] TRUE\n\nis.logical(True)\n\nError: object 'True' not found\n\n\n\nCan be obtained from logical statements, e.g.:\n\n\n2 &gt; 1\n\n[1] TRUE"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#logical-2",
    "href": "ioc_r/week02/r_w02_slides.html#logical-2",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Logical (2)",
    "text": "Logical (2)\n\nConvert to other types:\n\n\nas.numeric(TRUE)\n\n[1] 1\n\nas.numeric(FALSE)\n\n[1] 0\n\nvec_logical &lt;- c(TRUE, TRUE, FALSE)\nsum(vec_logical)\n\n[1] 2\n\n\n\n\nas.character(TRUE)\n\n[1] \"TRUE\"\n\nas.character(FALSE)\n\n[1] \"FALSE\"\n\n\n\n\n\nas.logical(1)\n\n[1] TRUE\n\nas.logical(-1)\n\n[1] TRUE\n\nas.logical(0)\n\n[1] FALSE"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#factor",
    "href": "ioc_r/week02/r_w02_slides.html#factor",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Factor",
    "text": "Factor\nUse factor when you want R treats your data as categorical data.\n\ngrades &lt;- c(\"one\", \"two\", \"one\", \"three\", \"two\")\ngrades\n\n[1] \"one\"   \"two\"   \"one\"   \"three\" \"two\"  \n\nfactor(grades)\n\n[1] one   two   one   three two  \nLevels: one three two\n\nas.factor(grades)\n\n[1] one   two   one   three two  \nLevels: one three two\n\n\n\nSpecify the levels:\n\ngrades_fac &lt;- factor(grades, levels = c(\"one\", \"two\", \"three\")) # specify the order\ngrades_fac\n\n[1] one   two   one   three two  \nLevels: one two three\n\n\n\n\nConvert to numeric values:\n\nas.numeric(grades_fac)\n\n[1] 1 2 1 3 2"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#from-single-value-to-multiple-values",
    "href": "ioc_r/week02/r_w02_slides.html#from-single-value-to-multiple-values",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "From Single Value to Multiple Values",
    "text": "From Single Value to Multiple Values\nWhen we store multiple values, we need a structure.\n\ngene1 &lt;- 10\ngene2 &lt;- 12\ngene3 &lt;- 9\n\nHow to put gene1, gene2 and gene3 together?\n\n R provides 4 data structures to store multiple values:\n\n\n\n\n1 dimension\n2 dimensions (row/column)\n\n\n\n\nSame data type\nvector\nmatrix\n\n\nDifferent data types\nlist\ndata frame"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#vector-creation-1",
    "href": "ioc_r/week02/r_w02_slides.html#vector-creation-1",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Vector Creation (1)",
    "text": "Vector Creation (1)\nUse the function c() to create a vector and use , to separate elements.\n\nc(10, 12, 9) # Numeric vector\n\n[1] 10 12  9\n\nc(gene1, gene2, gene3)\n\n[1] 10 12  9\n\ngene_expr &lt;- c(gene1, gene2, gene3)\ngene_expr\n\n[1] 10 12  9\n\nc(gene_expr, 18)\n\n[1] 10 12  9 18\n\n# other ways for numeric vector\n1:10\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nseq(10)\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n\n\n\nc(\"gene1\", \"gene2\", \"gene3\") # Character vector\n\n[1] \"gene1\" \"gene2\" \"gene3\"\n\nc(TRUE, FALSE, FALSE, TRUE, TRUE) # Logical vector\n\n[1]  TRUE FALSE FALSE  TRUE  TRUE"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#vector-creation-2",
    "href": "ioc_r/week02/r_w02_slides.html#vector-creation-2",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Vector Creation (2)",
    "text": "Vector Creation (2)\nWhen you combine different data types …\n\nc(10, TRUE)\n\n[1] 10  1\n\nc(10, \"gene1\")\n\n[1] \"10\"    \"gene1\"\n\nc(TRUE, \"gene1\")\n\n[1] \"TRUE\"  \"gene1\"\n\nc(10, \"gene1\", TRUE)\n\n[1] \"10\"    \"gene1\" \"TRUE\" \n\n\n\n R follows a hierarchy of data types for coercion:\nlogical (least flexible) → numeric → character (most flexible)\n\nR always picks the “most flexible” type that can represent all the values without losing information."
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#vector-indexing-1",
    "href": "ioc_r/week02/r_w02_slides.html#vector-indexing-1",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Vector Indexing (1)",
    "text": "Vector Indexing (1)\n\n\n\nUse [idx] to access element(s).\n\nNotes: The index starts from 1.\n\ngene_expr\n\n[1] 10 12  9\n\ngene_expr[1]   # 1st element\n\n[1] 10\n\ngene_expr[c(2, 3)] # elements 2 and 3\n\n[1] 12  9\n\ngene_expr[2:3] # elements 2 and 3\n\n[1] 12  9\n\ngene_expr[-1]  # remove 1st element\n\n[1] 12  9\n\n\n\n\nModify element(s).\n\n\ngene_expr[1] &lt;- 100\ngene_expr\n\n[1] 100  12   9\n\ngene_expr[2:3] &lt;- 8\ngene_expr\n\n[1] 100   8   8\n\ngene_expr[2:3] &lt;- c(0, 20)\ngene_expr\n\n[1] 100   0  20"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#vector-indexing-2",
    "href": "ioc_r/week02/r_w02_slides.html#vector-indexing-2",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Vector Indexing (2)",
    "text": "Vector Indexing (2)\n\n\n\nUse [name] to access element(s) if the vector is named.\n\n\n# name elements of the vector\nnames(gene_expr) &lt;- paste0(\"gene\", 1:3)\ngene_expr\n\ngene1 gene2 gene3 \n  100     0    20 \n\ngene_expr[\"gene1\"] # the element named \"gene1\"\n\ngene1 \n  100 \n\ngene_expr[c(\"gene1\", \"gene2\")] # extract \"gene1\" and \"gene2\"\n\ngene1 gene2 \n  100     0 \n\n\n\n\ngene_expr[-c(\"gene1\", \"gene2\")] # error\n\nError in -c(\"gene1\", \"gene2\"): invalid argument to unary operator\n\n\n\n\n\nModify element(s).\n\n\ngene_expr[\"gene1\"] &lt;- 2\ngene_expr\n\ngene1 gene2 gene3 \n    2     0    20 \n\n\n\nYour turns:\n\nmodify the expression value of “gene1” and “gene2” to 5\nchange the expression value of “gene1” to 0 and “gene2” to 16\n\n\n\n\ngene_expr[c(\"gene1\", \"gene2\")] &lt;- 5\ngene_expr\n\ngene1 gene2 gene3 \n    5     5    20 \n\ngene_expr[c(\"gene1\", \"gene2\")] &lt;- c(0, 16)\ngene_expr\n\ngene1 gene2 gene3 \n    0    16    20"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#vector-indexing-3",
    "href": "ioc_r/week02/r_w02_slides.html#vector-indexing-3",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Vector Indexing (3)",
    "text": "Vector Indexing (3)\n\n\n\nUse a logical vector for indexing.\n\n\nnum_vec &lt;- c(1, 2, 5, 4)\nnum_vec\n\n[1] 1 2 5 4\n\nlogical_vec &lt;- c(TRUE, TRUE, FALSE, FALSE)\nlogical_vec\n\n[1]  TRUE  TRUE FALSE FALSE\n\nnum_vec[logical_vec]\n\n[1] 1 2\n\n\n\n# create logical vect using comparison operator\nnum_vec &lt; 3\n\n[1]  TRUE  TRUE FALSE FALSE\n\n# then use it to extract values from the numeric vector\nnum_vec[num_vec &lt; 3]\n\n[1] 1 2\n\n\n\nYour turns:\nR use the == to test equality. Use this operator to extract the value 5 from the num_vec.\n\nnum_vec[num_vec == 5]\n\n[1] 5"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#vector-operations",
    "href": "ioc_r/week02/r_w02_slides.html#vector-operations",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Vector Operations",
    "text": "Vector Operations\n\n\n\n# create a vector for gene expression\ngene_expr &lt;- sample(x = 1:20, size = 10) # generate 10 random numbers between 1 and 20\ngene_expr\n\n [1] 15 19 14  3 10  2  6 11  5  4\n\n# check the structure\nclass(gene_expr)\n\n[1] \"integer\"\n\nstr(gene_expr)\n\n int [1:10] 15 19 14 3 10 2 6 11 5 4\n\n# vector length\nlength(gene_expr)\n\n[1] 10\n\n# show the first/last elements\nhead(gene_expr)\n\n[1] 15 19 14  3 10  2\n\ntail(gene_expr)\n\n[1] 10  2  6 11  5  4\n\n\n\n\n# Arithmetic operations\ngene_expr + 1\n\n [1] 16 20 15  4 11  3  7 12  6  5\n\ngene_expr - 1\n\n [1] 14 18 13  2  9  1  5 10  4  3\n\ngene_expr * 10\n\n [1] 150 190 140  30 100  20  60 110  50  40\n\ngene_expr / 10\n\n [1] 1.5 1.9 1.4 0.3 1.0 0.2 0.6 1.1 0.5 0.4\n\n\n\n\n# Apply some functions\nsummary(gene_expr)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   2.00    4.25    8.00    8.90   13.25   19.00 \n\nsum(gene_expr)\n\n[1] 89\n\nmean(gene_expr)\n\n[1] 8.9\n\nmedian(gene_expr)\n\n[1] 8"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#matrices-creation",
    "href": "ioc_r/week02/r_w02_slides.html#matrices-creation",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Matrices Creation",
    "text": "Matrices Creation\n\n\n\nUse the matrix() function to create a matrix.\n\n\nmy_mat1 &lt;- matrix(1:6, nrow = 2)\nmy_mat2 &lt;- matrix(1:6, nrow = 2, byrow = TRUE)\n\nmy_mat1\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\nmy_mat2\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n\n\n\n\nCombine vectors to create matrix.\n\n\nvec1 &lt;- 1:3\nvec2 &lt;- 4:6\n\nrbind(vec1, vec2)\n\n     [,1] [,2] [,3]\nvec1    1    2    3\nvec2    4    5    6\n\ncbind(vec1, vec2)\n\n     vec1 vec2\n[1,]    1    4\n[2,]    2    5\n[3,]    3    6\n\n\n\n\nWhat is the data structure of each row/column of a matrix?"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#matrices-indexing-1",
    "href": "ioc_r/week02/r_w02_slides.html#matrices-indexing-1",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Matrices Indexing (1)",
    "text": "Matrices Indexing (1)\n\nUse [row_idx,column_idx] to access element(s).\n\n\n\n\nmat &lt;- matrix(1:9, ncol = 3)\nmat\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\ndim(mat) # dimensions of the matrix\n\n[1] 3 3\n\nncol(mat)\n\n[1] 3\n\nnrow(mat)\n\n[1] 3\n\nmat[1, 2] # element in the 1st row and 2nd column\n\n[1] 4\n\nmat[, 3] # all rows of the 3rd column\n\n[1] 7 8 9\n\n\n\n\nYour turns:\n\nhow to get all columns of the 2nd and the 3rd rows?\nhow to get the value 5 from the matrix?\n\n\n\n\nmat[2:3, ]\n\n     [,1] [,2] [,3]\n[1,]    2    5    8\n[2,]    3    6    9\n\nmat[2, 2]\n\n[1] 5\n\n\n\n\n\nAs matrix is vectors extended into 2D, if question about drop dim, drop = FALSE"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#matrices-indexing-2",
    "href": "ioc_r/week02/r_w02_slides.html#matrices-indexing-2",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Matrices Indexing (2)",
    "text": "Matrices Indexing (2)\n\nUse [row_name,column_name] to access element(s) if names exist.\n\n\n\n\nmat\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n# give names to the columns and rows\nnamed_mat &lt;- mat\ncolnames(named_mat) &lt;- c(\"c1\", \"c2\", \"c3\")\nrownames(named_mat) &lt;- c(\"r1\", \"r2\", \"r3\")\n\nnamed_mat\n\n   c1 c2 c3\nr1  1  4  7\nr2  2  5  8\nr3  3  6  9\n\nnamed_mat[\"r1\", ] # all element of the 1st row\n\nc1 c2 c3 \n 1  4  7 \n\n\n\n\nYour turns: by using the names of rows and columns,\n\nhow to get 2nd row of the 2nd and the 3rd columns?\nhow to get the value 5 from the matrix?\n\n\n\n\nnamed_mat[\"r2\", c(\"c2\", \"c3\")]\n\nc2 c3 \n 5  8 \n\nnamed_mat[\"r2\", \"c2\"]\n\n[1] 5"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#matrices-indexing-3",
    "href": "ioc_r/week02/r_w02_slides.html#matrices-indexing-3",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Matrices Indexing (3)",
    "text": "Matrices Indexing (3)\n\n\n\nUse logical vector(s) for indexing.\n\n\nmat[c(TRUE, TRUE, FALSE), ]\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n\nnamed_mat[c(TRUE, TRUE, FALSE), c(FALSE, TRUE, TRUE)]\n\n   c2 c3\nr1  4  7\nr2  5  8\n\n\n\nYour turns:\nBy using the logical indexing, select the 2nd and 3rd rows, the 1st and 2nd columns of the named_mat.\n\n\nnamed_mat[c(FALSE, TRUE, TRUE), c(TRUE, TRUE, FALSE)]\n\n   c1 c2\nr2  2  5\nr3  3  6"
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#matrices-operations",
    "href": "ioc_r/week02/r_w02_slides.html#matrices-operations",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Matrices Operations",
    "text": "Matrices Operations\n\n\n\nCheck the structure\n\n\nclass(mat)\n\n[1] \"matrix\" \"array\" \n\nstr(mat)\n\n int [1:3, 1:3] 1 2 3 4 5 6 7 8 9\n\n\n\n\nSome maths\n\n\nmat + mat\n\n     [,1] [,2] [,3]\n[1,]    2    8   14\n[2,]    4   10   16\n[3,]    6   12   18\n\nrowSums(mat)\n\n[1] 12 15 18\n\ncolSums(mat)\n\n[1]  6 15 24\n\ncolMeans(mat)\n\n[1] 2 5 8\n\nrowMeans(mat)\n\n[1] 4 5 6\n\n\n\n\n\nModify elements\n\n\nmat[1:2, 3] &lt;- c(1, 2)\nmat\n\n     [,1] [,2] [,3]\n[1,]    1    4    1\n[2,]    2    5    2\n[3,]    3    6    9\n\n\n\n\nmat[1:2, ] &lt;- 10\nmat\n\n     [,1] [,2] [,3]\n[1,]   10   10   10\n[2,]   10   10   10\n[3,]    3    6    9\n\n\n\n\n\nmat[1, ] &lt;- c(1, 2)\n\nError in mat[1, ] &lt;- c(1, 2): number of items to replace is not a multiple of replacement length\n\n\n\n\nWhen assigning new values, you must provide either:\n\nA single value,\nA vector with the exact number of elements to be replaced, or\nA vector whose length is a factor of the number of elements to be replaced."
  },
  {
    "objectID": "ioc_r/week02/r_w02_slides.html#todays-goals",
    "href": "ioc_r/week02/r_w02_slides.html#todays-goals",
    "title": "Data Foundations:Vectors and Matrices",
    "section": "Today’s Goals",
    "text": "Today’s Goals\n\nGet familiar with data types\nGet familiar with vectors and matrices manipulations\nSimulate your own biological data and test the normality using the Shapiro-Wilk test."
  },
  {
    "objectID": "ioc_r/week02/r_w02_exos.html",
    "href": "ioc_r/week02/r_w02_exos.html",
    "title": "Week 2 - Hands-On Examples",
    "section": "",
    "text": "Get familiar with data types\nGet familiar with vectors and matrices manipulations\nCreate your own gene expression matrix and perform a Shapiro test on your data"
  },
  {
    "objectID": "ioc_r/week02/r_w02_exos.html#goals",
    "href": "ioc_r/week02/r_w02_exos.html#goals",
    "title": "Week 2 - Hands-On Examples",
    "section": "",
    "text": "Get familiar with data types\nGet familiar with vectors and matrices manipulations\nCreate your own gene expression matrix and perform a Shapiro test on your data"
  },
  {
    "objectID": "ioc_r/week02/r_w02_exos.html#data-types-in-r",
    "href": "ioc_r/week02/r_w02_exos.html#data-types-in-r",
    "title": "Week 2 - Hands-On Examples",
    "section": "Data Types in R",
    "text": "Data Types in R\nCreate variables to store the following types of biological data and check their class in R:\n\nThe name of a gene (e.g., BRCA1).\nThe number of samples in an experiment (e.g., 50).\nWhether a sample is treated or not (TRUE/FALSE).\nThe four bases in DNA sequence: A, T, G, C.\n\n\ngene_name &lt;- \"BRCA1\" \nclass(gene_name)\n\n[1] \"character\"\n\nnum_samples &lt;- 50    \nclass(num_samples)\n\n[1] \"numeric\"\n\nis_treated &lt;- TRUE  \nclass(is_treated)\n\n[1] \"logical\"\n\ndna_bases &lt;- c(\"A\", \"T\", \"G\", \"C\") \nclass(dna_bases)\n\n[1] \"character\""
  },
  {
    "objectID": "ioc_r/week02/r_w02_exos.html#vectors",
    "href": "ioc_r/week02/r_w02_exos.html#vectors",
    "title": "Week 2 - Hands-On Examples",
    "section": "Vectors",
    "text": "Vectors\nYou have the following concentrations of a drug measured in five samples (in µM): 2.3, 5.1, 3.8, 6.4, 4.9. Perform the following tasks:\n\nCreate a numeric vector to store the concentrations.\n\n\ndrug_concentration &lt;- c(2.3, 5.1, 3.8, 6.4, 4.9)\n\n\nCalculate the mean and standard deviation of the concentrations.\n\n\nmean_concentration &lt;- mean(drug_concentration)\nmean_concentration\n\n[1] 4.5\n\nsd_concentration &lt;- sd(drug_concentration)\nsd_concentration\n\n[1] 1.537856\n\n\n\nSubset the concentrations greater than 4 µM\n\n\nhigh_concentration &lt;- drug_concentration[drug_concentration &gt; 4]\nhigh_concentration\n\n[1] 5.1 6.4 4.9"
  },
  {
    "objectID": "ioc_r/week02/r_w02_exos.html#matrices",
    "href": "ioc_r/week02/r_w02_exos.html#matrices",
    "title": "Week 2 - Hands-On Examples",
    "section": "Matrices",
    "text": "Matrices\nYou’re working with expression levels of three genes (geneA, geneB, geneC) across five samples. The expression levels are as follows:\nsample1: 10, 12, 15  \nsample2: 20, 18, 22  \nsample3: 14, 16, 19  \nsample4: 8, 9, 7  \nsample5: 25, 30, 28  \n\nCreate a matrix to represent this data, with genes in rows and samples in columns.\n\n\n# Create the matrix\nexpression_levels &lt;- matrix(\n  c(10, 12, 15,\n    20, 18, 22,\n    14, 16, 19,\n    8, 9, 7,\n    25, 30, 28), \n  nrow = 3\n)\nexpression_levels\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   10   20   14    8   25\n[2,]   12   18   16    9   30\n[3,]   15   22   19    7   28\n\n## or create first samples' vector then combine them\nsample1 &lt;- c(10, 12, 15)\nsample2 &lt;- c(20, 18, 22)\nsample3 &lt;- c(14, 16, 19)\nsample4 &lt;- c(8, 9, 7)\nsample5 &lt;- c(25, 30, 28)\nexpression_levels2 &lt;- cbind(sample1, sample2, sample3, sample4, sample5)\nexpression_levels2\n\n     sample1 sample2 sample3 sample4 sample5\n[1,]      10      20      14       8      25\n[2,]      12      18      16       9      30\n[3,]      15      22      19       7      28\n\n\n\nAdd row and column names to the matrix.\n\n\n# Add row and column names\nrownames(expression_levels) &lt;- c(\"geneA\", \"geneB\", \"geneC\")\ncolnames(expression_levels) &lt;- c(\"sample1\", \"sample2\", \"sample3\", \"sample4\", \"sample5\")\n\n## or\nrownames(expression_levels) &lt;- paste0(\"gene\", LETTERS[1:3])\ncolnames(expression_levels) &lt;- paste0(\"sample\", 1:5)\n\nexpression_levels\n\n      sample1 sample2 sample3 sample4 sample5\ngeneA      10      20      14       8      25\ngeneB      12      18      16       9      30\ngeneC      15      22      19       7      28\n\n\n\nCalculate the mean expression for each gene (row-wise).\n\n\ngene_means &lt;- rowMeans(expression_levels)\ngene_means\n\ngeneA geneB geneC \n 15.4  17.0  18.2 \n\n\n\nSubset the data to show only samples where geneC expression is greater than 20.\n\n\n# Extract geneC\ngeneC_expression &lt;- expression_levels[\"geneC\", ]\n\n# Subset samples with geneC &gt; 20\nhigh_geneC_samples &lt;- geneC_expression[geneC_expression &gt; 20]\nhigh_geneC_samples\n\nsample2 sample5 \n     22      28"
  },
  {
    "objectID": "ioc_r/week02/r_w02_exos.html#test-the-normality-on-simulated-data",
    "href": "ioc_r/week02/r_w02_exos.html#test-the-normality-on-simulated-data",
    "title": "Week 2 - Hands-On Examples",
    "section": "Test the Normality on Simulated Data",
    "text": "Test the Normality on Simulated Data\n\nHeight\nUse following code to generate the height (in cm) of 100 students:\n\nset.seed(1)\nheights &lt;- round(rnorm(n = 100, mean = 170, sd = 10), 1)\nheights\n\n  [1] 163.7 171.8 161.6 186.0 173.3 161.8 174.9 177.4 175.8 166.9 185.1 173.9\n [13] 163.8 147.9 181.2 169.6 169.8 179.4 178.2 175.9 179.2 177.8 170.7 150.1\n [25] 176.2 169.4 168.4 155.3 165.2 174.2 183.6 169.0 173.9 169.5 156.2 165.9\n [37] 166.1 169.4 181.0 177.6 168.4 167.5 177.0 175.6 163.1 162.9 173.6 177.7\n [49] 168.9 178.8 174.0 163.9 173.4 158.7 184.3 189.8 166.3 159.6 175.7 168.6\n [61] 194.0 169.6 176.9 170.3 162.6 171.9 152.0 184.7 171.5 191.7 174.8 162.9\n [73] 176.1 160.7 157.5 172.9 165.6 170.0 170.7 164.1 164.3 168.6 181.8 154.8\n [85] 175.9 173.3 180.6 167.0 173.7 172.7 164.6 182.1 181.6 177.0 185.9 175.6\n [97] 157.2 164.3 157.8 165.3\n\n\n\n\n\n\n\n\nStats Time!\n\n\n\nNormal distribution\nA normal distribution (or Gaussian distribution), also called a “bell curve,” is a way that data often naturally organizes itself when we measure something repeatedly in a population.  It’s symmetric, with most values clustering around the average (mean, \\(\\mu\\)), and fewer values as you move farther away from it.\nMany statistical tests (like t-tests or ANOVAs) assume that the data is normally distributed because this allows us to calculate probabilities and make inferences. If the data isn’t normal, these tests might give misleading results.\nShapiro-Wilk Test\nThe Shapiro-Wilk test is a simple tool to check whether your data follows a normal distribution.\n\n\nThe function shapiro.test() in R allows to perform the test of normality.\n\nshapiro.test(heights) \n\n\n    Shapiro-Wilk normality test\n\ndata:  heights\nW = 0.99564, p-value = 0.9883\n\n\n\n\n\n\n\n\nStats Time!\n\n\n\nTest Hypotheses: H0, H1 When performing a statistical test, you start with two opposing ideas, called hypotheses, that you want to evaluate:\n\nNull Hypothesis (H0): This is the default assumption, often stating that there is no effect, no difference, or no relationship in your data.\nAlternative Hypothesis (H1): This is the claim you are testing for something different from the null hypothesis.\n\nWhen you perform a statistical test, the goal is to decide whether you have enough evidence to reject the null hypothesis (H0) in favor of the alternative hypothesis (H1).\nType I error\nThe significance level (\\(\\\\alpha\\)) is the maximum probability of rejecting the null hypothesis (H0) when it is actually true. This is also called a Type I error (a “false positive”).\nBy choosing \\(\\\\alpha = 0.05\\), you’re saying: “I’m willing to accept a 5% chance of incorrectly rejecting H0.”\nP-value\nThe p-value is the probability of observing your data (or something more extreme) if the null hypothesis (H0) is true.\n\nIf the p-value is small (e.g., ≤ 0.05):\n\nThere’s strong evidence against H0, so you reject it.\nThis suggests that the alternative hypothesis (H1) might be true.\n\nIf the p-value is large (e.g., &gt; 0.05):\n\nThere’s not enough evidence to reject H0.\nThis doesn’t mean H0 is true, it just means the data doesn’t strongly contradict it.\n\n\n\n\nHere, the H0 is the heights are normally distributed, and H1 is the heights are not normally distributed.\nIf we take \\(\\alpha=0.05\\): since the p-value (0.9876) is greater than 0.05, we fail to reject H0. This means there’s no strong evidence to suggest the heights are not normally distributed.\n\n# Histogram\nhist(\n  heights, probability = TRUE, col = \"lightblue\",\n  main = \"Histogram with Bell Curve\", xlab = \"Heights (cm)\", ylab = \"Density\"\n)\n# Add bell curve\ncurve(dnorm(x, mean = mean(heights), sd = sd(heights)), col = \"red\", lwd = 2, add = TRUE)\n\n\n\n\n\n\n\n\n\n\nGood job! 👏👏 You’ve taken your first big steps into R, and you’re off to a great start, keep it up!"
  },
  {
    "objectID": "ioc_r/week01/r_w01_exos.html",
    "href": "ioc_r/week01/r_w01_exos.html",
    "title": "Week 1 - Hands-On Examples",
    "section": "",
    "text": "Create a new project in your folder.\n\nSome rules for naming your project:\n\nbe descriptive and keep it short\nuse snake case (only lowercase letters and underscores allowed), avoid special characters (such as !, #, ) and spaces\nthe name cannot starts with numbers\n\n\nOpen your R project, create three new folders, i.e., data, scripts, outputs."
  },
  {
    "objectID": "ioc_r/week01/r_w01_exos.html#create-an-r-project",
    "href": "ioc_r/week01/r_w01_exos.html#create-an-r-project",
    "title": "Week 1 - Hands-On Examples",
    "section": "",
    "text": "Create a new project in your folder.\n\nSome rules for naming your project:\n\nbe descriptive and keep it short\nuse snake case (only lowercase letters and underscores allowed), avoid special characters (such as !, #, ) and spaces\nthe name cannot starts with numbers\n\n\nOpen your R project, create three new folders, i.e., data, scripts, outputs."
  },
  {
    "objectID": "ioc_r/week01/r_w01_exos.html#import-dataset",
    "href": "ioc_r/week01/r_w01_exos.html#import-dataset",
    "title": "Week 1 - Hands-On Examples",
    "section": "Import Dataset",
    "text": "Import Dataset\n\nData Description\nWe’ll be working with a gene expression dataset as an example, sourced from this link.\nThe specific file we’ll use is named “read-counts.csv”, which you can download from this zipped folder.\nThe data comes from an experiment using PCR to study 44 genes. The results were measured to see which genes are active at different stages in Yeast cell cycling. Several strains were tested, including wildtype and some with specific genes knock-downs. Samples were taken at nine time points over two cell cycles (two hours).\n\n\nImporting into Rstudio\n\nDownload the zipped file to your computer and extract its contents.\nIf you are using the RStudio server, upload the read-counts.csv to the folder data of your R project.\nClick on the file to “View” it and identify the column separator.\nImport the file into R and call the imported data “counts”."
  },
  {
    "objectID": "ioc_r/week01/r_w01_exos.html#play-with-basic-r-commands",
    "href": "ioc_r/week01/r_w01_exos.html#play-with-basic-r-commands",
    "title": "Week 1 - Hands-On Examples",
    "section": "Play with Basic R Commands",
    "text": "Play with Basic R Commands\n\nWhat is the absolute file path of the count data? What is its absolute path? Verify your answer using the function file.exists().\n\n\nfile.exists(\"relative_path/to/your/file\") # replace the path by the yours\nfile.exists(\"absolute_path/to/your/file\") # replace the path by the yours\n\n\nCheck the “Environment” panel or use the function dim(). What is the dimension of the data frame?\n\n\ndim(counts)\n\n[1] 45 41\n\n\nIn the “Environment” panel, click on the tabular icon next to the dataset to visualize the it.\nWe can extract all gene expressions for the sample named “WT:2” using counts[[\"WT:2\"]].\n\nTry mode() on the expression data for “WT:2”, what does it return?\n\n\nmode(counts[[\"WT:2\"]])\n\n[1] \"numeric\"\n\n\n\nCalculate the average expression (mean()) and standard deviation (sd()) of genes from the sample “WT:2”.\n\n\nmean(counts[[\"WT:2\"]])\n\n[1] 148\n\nsd(counts[[\"WT:2\"]])\n\n[1] 392.7854\n\n\n\nGenerate descriptive statistics for all genes from the sample “WT:2” using summary().\n\n\nsummary(counts[[\"WT:2\"]])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0       6      27     148     110    2527 \n\n\n\n\n\n\n\n\nStats Time!\n\n\n\nWhat are quartiles?\nQuartiles are three values that split sorted data into four equal parts.\n\nIQR (Interquartile range) = Q3 - Q1\n\n\n\nGenerate a histogram for the “WT:2” sample using hist(). What does the distribution look like?\n\n\n\n\n\n\n\nStats Time!\n\n\n\nHistograms help us see how data is spread out. They show how many data points fall into different ranges, or bins. By looking at a histogram, we can quickly understand the shape of the data, like if it’s skewed or has outliers. It’s a simple way to get an overview of your data.\n\n\n\nhist(counts[[\"WT:2\"]])\n\n\n\n\n\n\n\nhist(log2(counts[[\"WT:2\"]]))"
  },
  {
    "objectID": "ioc_r/week01/r_w01_exos.html#get-your-first-quarto-report",
    "href": "ioc_r/week01/r_w01_exos.html#get-your-first-quarto-report",
    "title": "Week 1 - Hands-On Examples",
    "section": "Get Your First Quarto Report",
    "text": "Get Your First Quarto Report\nClick the “Render” to generate the report!\n\nChange something in this script and re-render it, is the report up-to-date?\nWhere is your report stored?\nWhat should you do if you want the report be stored in a specified folder? =&gt; use a configuration file for Quarto.\n\nOpen a new text file and copy paste following code, save it as _quarto.yml in your project folder.\nproject:\n  output-dir: outputs/\nTry “Render” again, now where is your report?\n\n\nGood job! 👏👏 You’ve taken your first big steps into R, and you’re off to a great start, keep it up!"
  },
  {
    "objectID": "ioc_r_info.html",
    "href": "ioc_r_info.html",
    "title": "IOC R Training Information",
    "section": "",
    "text": "Welcome to the IOC R Training! This page contains all the essential details for the training. Please bookmark this page for quick access."
  },
  {
    "objectID": "ioc_r_info.html#calendar",
    "href": "ioc_r_info.html#calendar",
    "title": "IOC R Training Information",
    "section": "Calendar",
    "text": "Calendar\n\nFrench Group\n\nStarts from: Wednesday, 8th January 2025\n\nTime slots: Wednesdays 9:30 am – 12:00 pm\nLocation: Online (Zoom link will be shared prior to the session by email)\nProvisional Schedule:\n\n\n\n\n\n\n\n\n\nWeek\nSession\nDate\nTime\n\n\n\n\nWeek 1\nKickstart with R: Your Gateway to Data Science\n8th January\n9:30 am – 12:00 pm\n\n\nWeek 2\nData Foundations: Vectors and Matrices\n15th January\n9:30 am – 12:00 pm\n\n\nWeek 3\nMore Complex Data Structures: Lists and Data Frames\n22nd January\n9:30 am – 12:00 pm\n\n\nWeek 4\nBuilding Logic: Operators, Conditions, and Functions\n29th January\n9:30 am – 12:00 pm\n\n\nWeek 5\nGraphing with {ggplot2}\n5th February\n9:30 am – 12:00 pm\n\n\nWeek 6\nR-fresh: Revisiting the Essentials\n12th February\n9:30 am – 12:00 pm\n\n\nWeek 7\nSmart Shortcuts: Mastering the apply Family\n5th March\n9:30 am – 12:00 pm\n\n\nWeek 8\nTidy Your Data: Exploring {tidyr} and {dplyr}\n12th March\n9:30 am – 12:00 pm\n\n\nWeek 9\nString Tricks & Final Review\n19nd March\n9:30 am – 12:00 pm\n\n\nWeek 10\nYour project presentation\nTBD\nTBD\n\n\n\n\n\n\nEnglish Group\n\nStarts from: Monday, 13th January 2025\n\nTime slots: Mondays 9:30 am – 12:00 pm\n\nLocation: Online (Zoom link will be shared prior to the session by email)\nProvisional Schedule:\n\n\n\n\n\n\n\n\n\nWeek\nSession\nDate\nTime\n\n\n\n\nWeek 1\nKickstart with R: Your Gateway to Data Science\n13th January\n9:30 am – 12:00 pm\n\n\nWeek 2\nData Foundations: Vectors and Matrices\n20th January\n9:30 am – 12:00 pm\n\n\nWeek 3\nMore Complex Data Structures: Lists and Data Frames\n27th January\n9:30 am – 12:00 pm\n\n\nWeek 4\nBuilding Logic: Operators, Conditions, and Functions\n3rd February\n9:30 am – 12:00 pm\n\n\nWeek 5\nGraphing with {ggplot2}\n10th February\n9:30 am – 12:00 pm\n\n\nWeek 6\nR-fresh: Revisiting the Essentials\n3rd March\n9:30 am – 12:00 pm\n\n\nWeek 7\nSmart Shortcuts: Mastering the apply Family\n10th March\n9:30 am – 12:00 pm\n\n\nWeek 8\nTidy Your Data: Exploring {tidyr} and {dplyr}\n17th March\n9:30 am – 12:00 pm\n\n\nWeek 9\nString Tricks & Final Review\n24nd March\n9:30 am – 12:00 pm\n\n\nWeek 10\nYour project presentation\nTBD\nTBD"
  },
  {
    "objectID": "ioc_r_info.html#recommended-readings",
    "href": "ioc_r_info.html#recommended-readings",
    "title": "IOC R Training Information",
    "section": "Recommended Readings",
    "text": "Recommended Readings\n\nR for Data Science by Hadley Wickham\nHands-On Programming with R by Garrett Grolemund\nggplot2: Elegant Graphics for Data Analysis by Hadley Wickham\nYaRrr! The Pirate’s Guide to R by Nathaniel D. Phillips\nCRAN R Documentation"
  },
  {
    "objectID": "ioc_r_toc.html",
    "href": "ioc_r_toc.html",
    "title": "Materials for the IOC-R",
    "section": "",
    "text": "Data Foundations:Vectors and Matrices\n\n\nIOC-R Week2\n\n\n\nweek02\n\n\nslides\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 2 - Hands-On Examples\n\n\n\n\n\n\nweek02\n\n\nexercise\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKickstart with R:Your Gateway to Data Science\n\n\nIOC-R Week1\n\n\n\nweek01\n\n\nslides\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 1 - Hands-On Examples\n\n\n\n\n\n\nweek01\n\n\nexercise\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 1 - Homework\n\n\n\n\n\n\nweek01\n\n\nhomework\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "ioc_scrnaseq_info.html",
    "href": "ioc_scrnaseq_info.html",
    "title": "IOC Single-cell RNAseq Training Information",
    "section": "",
    "text": "Welcome to the IOC-scRNAseq Training!\nThe online course will be started from end March 2025. More details will be shared later."
  }
]