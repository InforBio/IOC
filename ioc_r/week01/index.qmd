---
title: "Kickstart with R:<br>Your Gateway to Data Science "
subtitle: "IOC-R Week1"
format:
  revealjs: 
    toc: true
    toc-title: "Overview"
    toc-depth: 1
    slide-number: true
    preview-links: auto
    logo: images/logoInforBio_fond_blanc.png
    # css: styles.css
categories: 
  - week01
  - slides
---

# Unlock the Power of Your Data with ![](images/R_logo.png){width=2.5cm}

## Welcome to R!

::: columns
::: {.column style="font-size: 90%;"}

Why R?

- Biologist friendly!
- Free and open-source
- Supported by a huge community

:::

::: {.column .fragment style="font-size: 90%;"}

What you can do with R?

- Analyze your data
- Visualize your findings
- Automate your workflow
- Share reproducible research
:::
:::


## The R Console {.smaller}

![](images/r_console2.png)

Type a command after the prompt ">" and type "Enter" to execute it.

# Rstudio

## Rstudio

Integrated Development Environment (IDE)  

![](images/screenshot_rstudio.png)


:::{.notes}
Everything you need in one organized window.
Save your work as a script, RStudio includes many useful features which let us code easily.
:::

## Rstudio {.smaller}

::: columns
::: {.column width="50%"}

![](images/screenshot_rstudio1.png)

:::

::: {.column width="50%" .incremental}
1. Script Pane: write your code here.
2. Console: where R "talks back" to you.
3. Environment/History: tracks your variables and past commands.
4. Files/Plots/Packages: managing your files, viewing graphs, or installing tools.
:::
:::


Rstudio [cheat sheet](https://rstudio.github.io/cheatsheets/rstudio-ide.pdf)
([and French version](https://rstudio.github.io/cheatsheets/translations/french/rstudio-ide_fr.pdf))


:::{.notes}
notebook, show results
:::


# Setting Up an R Project


## Create an R Project {.smaller}

An R project keeps everything for your project in **one workspace** (working directory) and 
helps R to know where to look for your files.

. . .

1. In RStudio, go to *File* -> *New Project*
2. Choose *New Directory* and click *New Project*
3. Set a folder name (e.g., `my_project`) and select where to save it.
4. Click *Create Project*

. . .

You'll notice RStudio restarts, and now your project is set up!

![](images/in_rproj.png){width=50%}

::: {.notes}
An R Project is a way to keep everything for your work (scripts, data, outputs) in one place.
Think of it like a special folder where RStudio automatically knows where to look for your files.
It helps avoid problems with messy file paths.
:::

## Understanding File Paths {.smaller}

A **path** tells your computer where to find files.

. . .

- **Absolute path**, starts from the very top of your computer's folder
  - E.g.: 
    - In real-life: France, Paris, 9 Quai St Bernard, Building B, office 725 
    - On Linux/Mac: `/home/user_name/my_project/data/myfile.csv`
    - On Windows: `C:\Users\user_name\my_project\data\myfile.csv`

. . .

- **Relative path**, starts from your working folder
  - E.g.:
    - Building B, office 725
    - `data/myfile.csv` or `data\myfile.csv` (Windows)


:::{.notes}
computer's file system -> a country
files -> offices in a building
:::

## A Well Organized Folder

Tree structure:

```sh
my_project/             # Your working directory    
â”œâ”€â”€ my_project.Rproj    # The R project configuration file
â”œâ”€â”€ README.md           # A short introduction of the project
â”œâ”€â”€ data                # Raw data files
â”‚Â Â  â””â”€â”€ raw_count.tsv
â”œâ”€â”€ scripts/            # Your R code files
â”‚Â Â  â””â”€â”€ 01-analysis.R
â”‚Â Â  â””â”€â”€ 02-figures.R
â””â”€â”€ outputs/            # Results, graphs, or reports 
```


:::{.notes}
example of bad home organisation: pillow in kitchen and microoven in the bathroom
The trunk is the main folder (your R Project).
Branches are subfolders for scripts, data, and output, ect.
By building a clear structure, youâ€™ll:
Always know where to find things.
Save time when coding in R or sharing your project with others.
Avoid messy files scattered everywhere.
:::


## Where Are You? {.smaller}

```sh
my_project/             # Your working directory
â”œâ”€â”€ my_project.Rproj    # The R project configuration file
â”œâ”€â”€ README.md           # A short introduction of the project
â”œâ”€â”€ data                # Raw data files
â”‚Â Â  â””â”€â”€ raw_count.tsv
â”œâ”€â”€ scripts/            # Your R code files
â”‚Â Â  â””â”€â”€ 01-analysis.R
â”‚Â Â  â””â”€â”€ 02-figures.R
â””â”€â”€ outputs/            # Results, graphs, or reports 
```
<br> 

```r
getwd() # Get working directory
[1] "/home/user_name/my_project"
```

<br> 

. . .

What is the file path of "02-figures.R"?

. . .

::: {style="font-size:80%"}
`scripts/02-figures.R`
:::

. . .

```r
file.exists("scripts/02-figures.R")
[1] TRUE
```


## Getting Started in R {.smaller}

- Create a new file[^1]: *File* -> *New File* -> *R Script*
- Basic commands[^2]:

``` {.r code-line-numbers="1-3|5-6|8-10|12-13|15-16|18-19"}
# Math with R:
2 + 2    # Yes, R can do math!
sqrt(16) # Square root.

# Create a variable:
x <- 5 # Now x is 5. You can reuse it!

# Inspect your environment:
## Look at the "Environment" pane, do you see your x?
ls()

# Load a package:
library(stats)

# Get help of a function (documentation):
?mean

# Quit RStudio properly
q()
```


[^1]: Shortcut to create new file: press *Shift + Ctrl + N* (Windows) or *Shift + Cmd + N* (Mac)
[^2]: Shortcut to run code: highlight it and press *Ctrl + Enter* (Windows) or *Cmd + Enter* (Mac)


## Import Dataset

::: columns
::: {.column style="font-size: 60%;"}

- Supported formats:  
  - text files (.txt, .csv, *etc.*)
  - Excel files
  - data from other software (e.g., SAS)

- Click-button methods:  
  - From menu bar:
    *File* -> *Import Dataset* -> Select the format -> Choose your file
  - From the "Environment" Pane:
    click "Import Dataset"  -> Select the format -> Choose your file
  - From the "Files" Pane:
    Navigate to your file location -> Click the file and select "Import Dataset"

:::

::: {.column}
![](images/import_data.png)
:::
:::


# Automated Reporting

## Quarto

- Open-source tools for creating dynamic and shareable document.
- Combines narrative text and code (multi-language) in one script (.qmd).
- Supports multiple output formats: .html, .docx, .pptx, .pdf, *etc.*


## An Example {.smaller}

::: columns
::: {.column}
![](images/quarto_annot.png)
:::

:::{.column .fragment}
![](images/quarto_output.png)
:::
:::

Markdown syntax [cheat sheet](https://www.markdownguide.org/cheat-sheet/)


## Need Some Help? {.smaller}

- Google it!
- Ask/discuss your question via Slack.
- AI (like ChatGPT) is your friend ðŸ˜‰, but be careful of false answers!

**Key points**:

- Explain your question step-by-step.
- Share the context.
- Use keywords.
- Try to rephrase the question.


::: {.notes}
google/forum stack overFlow
- what are you trying to do / what did you try?
- the warning or error message / your code / your data structure
- language name / function or package name / a specific problem
- try and iterate
:::


# Let's Practice !

## Today's Goals

- Get familiar with the RStudio
- Create an R project in RStudio
- Upload and import data file into RStudio
- Generate your first Quarto report
