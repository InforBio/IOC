---
title: "Week 1 - Hands-On Examples"
category: "excercises"
editor_options: 
  chunk_output_type: console
---

## Some RStudio Settings

Go to *Tools* -> *Global Options...*

- Under the *General* tab:
  - Uncheck the box "Restore .RData..."
  - Set "Save workspace to .RData on exit" to **Never**.
  
![](images/rstudio_setting1.png)

- Under the *Code* tab:

In the *Display* panel, check the box "Use rainbow parentheses"

![](images/rstudio_setting2.png)

- Under the *Appearance* tab:

You can select a theme for you RStudio, e.g., the "Cobalt" for a dark theme.


- Under the *Pane Layout* tab:

You can arrange the four panels as you prefer.

In addition, click "Add Column" lets you open an extra "Source" code column, allowing you to view your scripts side by side!

![](images/rstudio_setting3.png)


## Create an R project

1. Create a new project in your folder.

Some rules for naming your project:  

- be descriptive and keep it short
- use snake case (only lowercase letters and underscores allowed), avoid special characters (such as `!`, `#`, ) and spaces
- the name cannot starts with numbers

2. Open your R project, create three new folders, *i.e.*, `data`, `scripts`, `outputs`.


## Import Dataset

### Data Description

We will use a gene expression data as example.

The file is called "read-counts.csv" you can download it using this [link](https://monashbioinformaticsplatform.github.io/r-more/r-more-files.zip).

The data comes from an experiment using PCR to study 44 genes.
The results were measured to see which genes are active at different stages in Yeast cell cycling.
Several strains were tested, including wildtype and some with specific genes knock-downs.
Samples were taken at nine time points over two cell cycles (two hours).

Source: https://monashbioinformaticsplatform.github.io/r-more/topics/tidyverse.html


### Import into Rstudio

1. Download the zipped file to your computer and unzipped it.
2. Upload the `read-counts.csv` to the folder `data` of your R project.
3. Click on the file to "View" it, what is the separator of each column?
4. Import the file into R and call it "counts"


## Play with Basic R Commands

1. What is the absolute file path of the count data? Check your answer with the function `file.exists()`.

```{r}
#| echo: false
#| message: false

counts <- readr::read_csv("read-counts.csv")
```

```{r}
#| eval: false

file.exists("path/to/your/file") # replace the path by the yours
```

2. Check the "Environment" panel or use the function `dim()`.
What is the dimension of the data frame?

```{r}
dim(counts)
```

Click on the tabular logo after the data to visualize the dataset.

We can extract all genes' expression of the sample named "WT:2" by using `counts[["WT:2"]]`.

3. Try `mode()` on the expression data of "WT:2":

```{r}
mode(counts[["WT:2"]])
```

4. Calculate the average expression (`mean()`) and standard deviation (`sd()`) of genes from sample "WT:2".

```{r}
mean(counts[["WT:2"]])
sd(counts[["WT:2"]])
```

5. Generate a descriptive statistics of the data frame using `summary()`

```{r}
summary(counts[["WT:2"]])
```

::: {.callout-tip title="Stats Time!"}
What are quartiles?

Quartiles are three values that split sorted data into four equal parts.

![](images/boxplot.png){width=65%}

IQR (Interquartile range) = Q3 - Q1

IQR only includes the middle 50% of the data.
:::


6. Generate a histogram of the "WT:2" using `hist()` and what is the distribution?

::: {.callout-tip title="Stats Time!"}
**Histograms** help us see how data is spread out.
They show how many data points fall into different ranges, or *bins*.
By looking at a histogram, we can quickly understand the shape of the data,
like if it‚Äôs skewed or has outliers.
It's a simple way to get an overview of your data.
:::

```{r}
hist(counts[["WT:2"]])
hist(log2(counts[["WT:2"]]))
```

## Get Your First Quarto Report

Click the "Render" to generate the report!

- Change something in this script and re-render it, is the report up-to-date?
- Where is your report stored?
- What should you do if you want the report be stored in a specified folder?
  => use a configuration file for Quarto.
  
Open a new text file and copy paste following code, save it as `_quarto.yml` in your project folder.

```r
project:
  output-dir: outputs/
```

Try "Render" again, now where is your report?


---

#### Good job! üëèüëè You've taken your first big steps into R, and you're off to a great start, keep it up! 


